{
  "name": "nodejs-auth-sql",
  "version": "1.0.1",
  "description": "Node.js for Token Based Authentication (access and refresh) with PostgreSQL database.",
  "index": "src/index.ts",
  "scripts": {
    "start:dev": "tsc-watch --onSuccess \"ts-node ./src/index.ts\" | pino-pretty",
    "start:prod": "node dist/index.js | pino-pretty",
    "build": "tsc -p tsconfig.build.json && tsc-alias -p tsconfig.build.json",
    "test:e2e": "NODE_ENV=test jest --testPathPattern=\"tests/e2e/.*test*.\" --maxWorkers=50%",
    "test:integration": "NODE_ENV=test jest --testPathPattern=\"tests/integration/.*test*.\" --maxWorkers=50%",
    "test:unit": "NODE_ENV=test jest --testPathPattern=\"tests/unit/.*test*.\" --maxWorkers=50%",
    "test:unit:ci": "NODE_ENV=test jest --testPathPattern=\"tests/unit/.*test*.\" --runInBand --reporters=default --reporters=jest-junit",
    "test:unit:cov": "NODE_ENV=test jest --coverage --testPathPattern=\"tests/unit/.*test*.\"",
    "commit": "git add . && git-cz",
    "lint": "eslint \"src/**/*.ts\"",
    "lint:staged": "lint-staged",
    "lint:fix": "eslint \"src/**/*.ts\" --fix",
    "migrate:create": "npm run typeorm:cli migration:create src/database/migration/$npm_config_name",
    "migrate:create:win": "npm run typeorm:cli migration:create src/database/migration/%npm_config_name%",
    "migrate:revert": "npm run typeorm:cli migration:revert -- -d src/database/typeorm/data-source.ts",
    "migrate:run": "npm run typeorm:cli migration:run -- -d src/database/typeorm/data-source.ts",
    "migrate:show": "npm run typeorm:cli migration:show -- -d src/database/typeorm/data-source.ts",
    "release:major": "standard-version --release-as major && git push --follow-tags",
    "release:minor": "standard-version --release-as minor && git push --follow-tags",
    "release:patch": "standard-version --release-as patch && git push --follow-tags",
    "schema:log": "npm run typeorm:cli schema:log -- -d src/database/typeorm/data-source.ts",
    "schema:sync": "npm run typeorm:cli schema:sync -- -d src/database/typeorm/data-source.ts",
    "seed:create": "npm run typeorm:seed migration:create src/database/seed/$npm_config_name",
    "seed:run": "npm run typeorm:seed migration:run -- -d src/database/typeorm/data-source.ts",
    "seed:revert": "npm run typeorm:seed migration:revert -- -d src/database/typeorm/data-source.ts",
    "typeorm:cli": "NODE_ENV=cli typeorm-ts-node-commonjs",
    "typeorm:seed": "NODE_ENV=seed typeorm-ts-node-commonjs",
    "prebuild": "rimraf dist",
    "commit-msg": "commitlint -e",
    "pre-commit": "npm run lint:staged & npm run test:unit",
    "prepare": "husky install",
    "swagger": "swagger-jsdoc -o ./swagger/dist/openapi.json -d ./swagger/swagger.js ./swagger/swagger.yaml ./src/modules/*/*.controller.ts ./src/modules/*/*.yaml"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/neverovski/nodejs-auth-jwt.git"
  },
  "author": "Dmitry Neverovski",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/neverovski/nodejs-auth-jwt/issues"
  },
  "engines": {
    "node": "^20",
    "npm": "^10"
  },
  "homepage": "https://github.com/neverovski/nodejs-auth-jwt#readme",
  "dependencies": {
    "@autotelic/pino-seq-transport": "^0.1.0",
    "@elastic/ecs-pino-format": "^1.5.0",
    "ajv": "^8.12.0",
    "ajv-errors": "^3.0.0",
    "ajv-formats": "^2.1.1",
    "ajv-keywords": "^5.1.0",
    "body-parser": "^1.20.2",
    "bull": "^4.11.5",
    "class-transformer": "^0.5.1",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "date-fns": "^2.30.0",
    "date-fns-tz": "^2.0.0",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-pino-logger": "^7.0.0",
    "express-prom-bundle": "^6.6.0",
    "fast-jwt": "^3.3.2",
    "google-auth-library": "^9.4.0",
    "helmet": "^7.1.0",
    "joi": "^17.11.0",
    "json-schema": "^0.4.0",
    "jwks-rsa": "^3.1.0",
    "marked": "^9.1.3",
    "mem": "^8.1.1",
    "ms": "^2.1.3",
    "mustache": "^4.2.0",
    "nodemailer": "^6.9.7",
    "pg": "^8.11.3",
    "pino": "^8.16.2",
    "pino-elasticsearch": "^7.0.0",
    "pino-http": "^8.5.1",
    "pino-pretty": "^10.2.3",
    "prom-client": "^15.0.0",
    "tsyringe": "^4.8.0",
    "typeorm": "^0.3.17",
    "ua-parser-js": "^1.0.37"
  },
  "devDependencies": {
    "@commitlint/cli": "^18.4.3",
    "@commitlint/config-conventional": "^18.4.3",
    "@commitlint/cz-commitlint": "^18.4.3",
    "@types/body-parser": "^1.19.5",
    "@types/bull": "^3.15.9",
    "@types/cookie-parser": "^1.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/express-pino-logger": "^4.0.5",
    "@types/jest": "^29.5.10",
    "@types/json-schema": "^7.0.15",
    "@types/ms": "^0.7.34",
    "@types/mustache": "^4.2.5",
    "@types/node": "^20.10.3",
    "@types/nodemailer": "^6.4.14",
    "@types/pg": "^8.10.9",
    "@types/ua-parser-js": "^0.7.39",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "commitizen": "^4.3.0",
    "eslint": "^8.54.0",
    "eslint-config-airbnb-typescript": "^17.1.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-prettier": "^5.0.1",
    "eslint-plugin-typescript-sort-keys": "^3.1.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-fetch-mock": "^3.0.3",
    "jest-junit": "^16.0.0",
    "lint-staged": "^15.1.0",
    "openapi-types": "^12.1.3",
    "prettier": "^3.1.0",
    "reflect-metadata": "^0.1.13",
    "standard-version": "^9.5.0",
    "swagger-jsdoc": "^6.2.8",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "tsc-alias": "^1.8.8",
    "tsc-watch": "^6.0.4",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.3.2"
  },
  "config": {
    "commitizen": {
      "path": "@commitlint/cz-commitlint"
    }
  },
  "lint-staged": {
    "*.ts": "eslint --cache \"src/**/*.ts\""
  },
  "jest-junit": {
    "outputDirectory": "reports",
    "outputName": "jest-junit.xml",
    "ancestorSeparator": " â€º ",
    "uniqueOutputName": "false",
    "suiteNameTemplate": "{filepath}",
    "classNameTemplate": "{classname}",
    "titleTemplate": "{title}"
  }
}
