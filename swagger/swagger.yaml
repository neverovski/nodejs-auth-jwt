components:
  parameters:
    IdParam:
      in: path
      name: id
      required: true
      schema:
        type: integer
        format: int64
        example: 10
      description: Numeric ID to get

  responses:
    TokenResponse:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Token'

    IdResponse:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: number
                example: 1

    HttpOk:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Ok
              status:
                type: number
                example: 200
              code:
                type: string
                example: OK

    HttpNoContent:
      description: No Content

    HttpBadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/InvalidCredentialsError'

    HttpUnauthorized:
      description: You are not authorized to view the resource
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/TokenNotProviderError'
              - $ref: '#/components/schemas/TokenExpiredError'
              - $ref: '#/components/schemas/TokenVerifyError'
              - $ref: '#/components/schemas/RefreshTokenExpiredError'
              - $ref: '#/components/schemas/RefreshTokenVerifyError'
              - $ref: '#/components/schemas/TokenMalformedError'

    HttpForbidden:
      description: Accessing the resource you were trying to reach is forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Forbidden'

    HttpNotFound:
      description: The resource you were trying to reach is not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: The resource you were trying to reach is not found
              status:
                type: number
                example: 404
              code:
                type: string
                example: NOT_FOUND

    HttpUnprocessableEntity:
      description: Validation Failed
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Validation Failed
              status:
                type: number
                example: 422
              code:
                type: string
                example: UNPROCESSABLE_ENTITY
              errors:
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
                      example: The "email" must be a string of format test@test.com, it is test.com

    HttpInternalServerError:
      description: Application failed to process the request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ExternalServiceError'
              - $ref: '#/components/schemas/ServerErrorOccurred'
              - $ref: '#/components/schemas/DBError'

  securitySchemes:
    CookieAuth:
      type: apiKey
      in: cookie
      name: accessToken

    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    TokenNotProviderError:
      type: object
      properties:
        message:
          type: string
          example: Token not provided
        status:
          type: number
          example: 401
        code:
          type: string
          example: TOKEN_NOT_PROVIDED

    TokenExpiredError:
      type: object
      properties:
        message:
          type: string
          example: Token expired
        status:
          type: number
          example: 401
        code:
          type: string
          example: TOKEN_EXPIRED

    TokenVerifyError:
      type: object
      properties:
        message:
          type: string
          example: Token verify error
        status:
          type: number
          example: 401
        code:
          type: string
          example: TOKEN_VERIFY

    RefreshTokenExpiredError:
      type: object
      properties:
        message:
          type: string
          example: Refresh token expired
        status:
          type: number
          example: 401
        code:
          type: string
          example: REFRESH_TOKEN_EXPIRED

    RefreshTokenVerifyError:
      type: object
      properties:
        message:
          type: string
          example: Refresh token verify error
        status:
          type: number
          example: 401
        code:
          type: string
          example: REFRESH_TOKEN_VERIFY

    TokenMalformedError:
      type: object
      properties:
        message:
          type: string
          example: Trying get data from token. Something wrong
        status:
          type: number
          example: 401
        code:
          type: string
          example: TOKEN_MALFORMED

    Forbidden:
      type: object
      properties:
        message:
          type: string
          example: Forbidden
        status:
          type: number
          example: 403
        code:
          type: string
          example: FORBIDDEN

    InvalidCredentialsError:
      type: object
      properties:
        message:
          type: string
          example: Invalid credentials
        status:
          type: number
          example: 400
        code:
          type: string
          example: INVALID_CREDENTIALS

    ExternalServiceError:
      type: object
      properties:
        message:
          type: string
          example: External service error
        status:
          type: number
          example: 500
        code:
          type: string
          example: EXTERNAL

    ServerErrorOccurred:
      type: object
      properties:
        message:
          type: string
          example: Application failed to process the request
        status:
          type: number
          example: 500
        code:
          type: string
          example: SERVER_ERROR

    DBError:
      type: object
      properties:
        message:
          type: string
          example: DB error
        status:
          type: number
          example: 500
        code:
          type: string
          example: DB_ERROR

    Meta:
      type: object
      properties:
        limit:
          type: number
          format: int64
          example: 20
        currentPage:
          type: number
          format: int64
          example: 1
        hasNextPage:
          type: boolean
          example: true
        hasPrevPage:
          type: boolean
          example: false
        nextPage:
          type: number
          format: int64
          example: 2
        prevPage:
          type: number
          format: int64
          example: 1
        totalPages:
          type: number
          format: int64
          example: 10
        totalItems:
          type: number
          format: int64
          example: 200

    Token:
      type: object
      properties:
        tokenType:
          type: string
          example: Bearer
        accessToken:
          $ref: '#/components/schemas/TokenValue'
        refreshToken:
          $ref: '#/components/schemas/TokenValue'

    EmailValue:
      type: string
      example: info@ontid.com

    PasswordValue:
      type: string
      minLength: 6
      example: '******'

    PlatformValue:
      type: string
      enum:
        - facebook
        - apple
        - google
        - github
      example: facebook

    TokenValue:
      type: string
      example: '******'
